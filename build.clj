;; Run this script with "clj -T:build uber"
(ns build
  (:require [clojure.tools.build.api :as b]
            [babashka.fs :as fs]))

(def lib 'com.github.schmir/prune-backups)
(def version (format "0.%s" (b/git-count-revs nil)))
(def class-dir "target/classes")
(def basis (b/create-basis {:project "deps.edn"}))
(def uber-file (format "target/%s-%s.jar" (name lib) version))
(def uberscript-file (format "target/%s-%s" (name lib) version))
(def bb-script-shebang
  "#!/usr/bin/env bb\n;; DO NOT EDIT THIS FILE!\n\n")

(let [d (delay (b/delete {:path "target"}))]
  (defn clean [_]
    @d))

(defn uber [_]
  (clean nil)
  (b/copy-dir {:src-dirs ["src" "resources"]
               :target-dir class-dir})
  (b/compile-clj {:basis basis
                  :ns-compile '[prune-backups.cli]
                  :class-dir class-dir})
  (b/uber {:class-dir class-dir
           :uber-file uber-file
           :basis basis
           :main 'prune-backups.cli}))

(defn uberscript [_]
  (clean nil)
  (fs/create-dirs "target")
  (let [tmp-file (str uberscript-file ".tmp")]
    (b/process {:command-args ["bb" "uberscript" tmp-file "-m" "prune-backups.cli"]})
    (spit uberscript-file (str bb-script-shebang (slurp tmp-file)))
    (fs/set-posix-file-permissions uberscript-file "rwxr-xr-x")
    (fs/delete tmp-file)))

(defn uberall [_]
  (uber nil)
  (uberscript nil))
